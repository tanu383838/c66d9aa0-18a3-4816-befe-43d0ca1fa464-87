import { GoogleGenerativeAI } from '@google/generative-ai';

export type ContentType = 'eBook' | 'Facebook Post' | 'Instagram Post';

export interface ContentResult {
  type: ContentType;
  title: string;
  content: string;
  imageIdeas: string[];
}

const PROMPT_TEMPLATE = `
ржЖржкржирж┐ ржПржХржЬржи ржЕржнрж┐ржЬрзНржЮ ржХржиржЯрзЗржирзНржЯ рж░рж╛ржЗржЯрж╛рж░, рж╢рж┐ржХрзНрж╖ржХ ржУ ржХржкрж┐ рж░рж╛ржЗржЯрж╛рж░ тАФ ржпрж╛рж░ ржХрж╛ржЬ рж╣рж▓ ржорж╛ржирзБрж╖ржХрзЗ рж╕рж╣ржЬ ржнрж╛рж╖рж╛ржпрж╝ рж╢рзЗржЦрж╛ржирзЛ ржУ ржЕржирзБржкрзНрж░рж╛ржгрж┐ржд ржХрж░рж╛ред

ржПржХржЯрж┐ ржмрж╛ржВрж▓рж╛ {{CONTENT_TYPE}} рж▓рж┐ржЦрзБржи ржЯржкрж┐ржХ: "{{TOPIC}}" ржЙржкрж░ ржнрж┐рждрзНрждрж┐ ржХрж░рзЗред

---

ЁЯУШ **ржпржжрж┐ Content Type рж╣ржпрж╝: eBook**, рждрж╛рж╣рж▓рзЗ рж▓рж┐ржЦрзБржи:

- рж╢рж┐рж░рзЛржирж╛ржо: **"From Scratch to Pro: {{TOPIC}}"**
- рж▓ржХрзНрж╖рзНржп: ржПржХржЬржи ржПржХрзЗржмрж╛рж░рзЗ ржирждрзБржи рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржХрзЗ рж╢рзБрж░рзБ ржерзЗржХрзЗ ржкрзНрж░ржлрзЗрж╢ржирж╛рж▓ ржкрж░рзНржпрж╛ржпрж╝ ржкрж░рзНржпржирзНржд ржирзЗржУржпрж╝рж╛
- ржнрж╛рж╖рж╛: ржкрзНрж░рж╛ржЮрзНржЬрж▓, ржмржирзНржзрзБрж░ ржорждрзЛ, ржЧрж▓рзНржкрзЗрж░ ржЫрж▓рзЗ рж╢рзЗржЦрж╛ржирзЛ
- рж╕рзНржЯрж╛ржЗрж▓: ржпрзЗржи ржорж╛ржирзБрж╖ рж▓рж┐ржЦрзЗржЫрзЗ тАФ рждржерзНржпржнрж┐рждрзНрждрж┐ржХ, ржЯрж┐ржкрж╕рж╕рж╣, ржЕржирзБржкрзНрж░рзЗрж░ржгрж╛ржжрж╛ржпрж╝ржХ
- ржХрж╛ржарж╛ржорзЛ:
  1. ржнрзВржорж┐ржХрж╛
  2. ржЕржзрзНржпрж╛ржпрж╝ржнрж┐рждрзНрждрж┐ржХ ржЧрж╛ржЗржб (рзо-рззрзжржЯрж┐ ржЕржзрзНржпрж╛ржпрж╝)
  3. ржкрзНрж░рждрж┐ржЯрж┐ ржЕржзрзНржпрж╛ржпрж╝рзЗ:
     - ржмрж┐рж╖ржпрж╝ржнрж┐рждрзНрждрж┐ржХ ржмрзНржпрж╛ржЦрзНржпрж╛
     - ржмрж╛рж╕рзНрждржм ржЙржжрж╛рж╣рж░ржг
     - ржЕржирзБрж╢рзАрж▓ржи
     - ржЕржзрзНржпрж╛ржпрж╝рзЗрж░ рж╕рж╛рж░рж╛ржВрж╢

ржЙржжрзНржжрзЗрж╢рзНржп: ржпрзЗржи ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржПржХржЬржи рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА ржХрзЛржирзЛ ржкрзВрж░рзНржмржЬрзНржЮрж╛ржи ржЫрж╛ржбрж╝рж╛ржЗ ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ рж╢рж┐ржЦрждрзЗ ржкрж╛рж░рзЗред

---

ЁЯУ▒ **ржпржжрж┐ Content Type рж╣ржпрж╝: Facebook Post ржмрж╛ Instagram Post**, рждрж╛рж╣рж▓рзЗ рж▓рж┐ржЦрзБржи:

- ржмрж╛ржВрж▓рж╛ ржнрж╛рж╖рж╛ржпрж╝ рззржЯрж┐ ржЖржХрж░рзНрж╖ржгрзАржпрж╝ ржкрзЛрж╕рзНржЯ ржмрж╛ ржХрзНржпрж╛ржкрж╢ржи
- рж╢рзБрж░рзБ рж╣рзЛржХ рж╣рзБржХ рж▓рж╛ржЗржирзЗ (attention grabber)
- ржкрзЛрж╕рзНржЯ рж╣рзЛржХ ржЧрж▓рзНржкржоржпрж╝, рж╣рж╛рж▓ржХрж╛ ржПржмржВ relatable
- рж╢рзЗрж╖рзЗ call-to-action ржмрж╛ thoughtful ending
- рж╕рж╛ржерзЗ рзлржЯрж┐ ржкрзНрж░рж╛рж╕ржЩрзНржЧрж┐ржХ рж╣рзНржпрж╛рж╢ржЯрзНржпрж╛ржЧ

---

ЁЯза **Extra Guideline (рж╕ржм ржЯрж╛ржЗржкрзЗрж░ ржЬржирзНржп ржкрзНрж░ржпрзЛржЬрзНржп):**
- ржЯрзЛржи: рж╕рж╣рж╛ржирзБржнрзВрждрж┐рж╢рзАрж▓, ржЙрзОрж╕рж╛рж╣ржмрзНржпржЮрзНржЬржХ ржПржмржВ ржЕржирзБржкрзНрж░рзЗрж░ржгрж╛ржжрж╛ржпрж╝ржХ
- ржпрзЗржи AI ржирж╛, ржорж╛ржирзБрж╖ржЗ рж▓рж┐ржЦрзЗржЫрзЗ ржПржоржи ржоржирзЗ рж╣ржпрж╝
- ржмржбрж╝ ржмржбрж╝ ржЗржВрж░рзЗржЬрж┐ рж╢ржмрзНржж ржПржбрж╝рж┐ржпрж╝рзЗ ржмрж╛ржВрж▓рж╛ ржмрзНржпрж╛ржЦрзНржпрж╛рж╕рж╣ ржжрзЗржУржпрж╝рж╛
- ржкрзНрж░ржпрж╝рзЛржЬржирзЗ ржЫрзЛржЯ ржЧрж▓рзНржк/ржЙржкржорж╛/ржорзЗржЯрж╛ржлрзЛрж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛

ржирж┐ржорзНржирзЛржХрзНржд ржлрж░ржорзНржпрж╛ржЯрзЗ ржЖржЙржЯржкрзБржЯ ржжрж┐ржи:

CONTENT_TITLE_START
[ржПржЦрж╛ржирзЗ ржХржиржЯрзЗржирзНржЯрзЗрж░ рж╢рж┐рж░рзЛржирж╛ржо рж▓рж┐ржЦрзБржи]
CONTENT_TITLE_END

CONTENT_BODY_START
[ржПржЦрж╛ржирзЗ ржорзВрж▓ ржХржиржЯрзЗржирзНржЯ рж▓рж┐ржЦрзБржи - eBook ржПрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ ржЕржзрзНржпрж╛ржпрж╝ржЧрзБрж▓рзЛ /// ржжрж┐ржпрж╝рзЗ ржЖрж▓рж╛ржжрж╛ ржХрж░рзБржи]
CONTENT_BODY_END

IMAGE_IDEAS_START
[ржПржЦрж╛ржирзЗ рзл-рзоржЯрж┐ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЗржорзЗржЬ ржЖржЗржбрж┐ржпрж╝рж╛ ржжрж┐ржи]
IMAGE_IDEAS_END
`;

export class GeminiService {
  private genAI: GoogleGenerativeAI | null = null;
  private apiKey: string = '';

  constructor(apiKey?: string) {
    if (apiKey) {
      this.setApiKey(apiKey);
    }
  }

  setApiKey(apiKey: string) {
    this.apiKey = apiKey;
    this.genAI = new GoogleGenerativeAI(apiKey);
  }

  async generateContent(topic: string, contentType: ContentType): Promise<ContentResult> {
    if (!this.genAI) {
      throw new Error('Gemini API key not set. Please provide your API key.');
    }

    const model = this.genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
    const prompt = PROMPT_TEMPLATE
      .replace('{{TOPIC}}', topic)
      .replace('{{CONTENT_TYPE}}', contentType);

    try {
      const result = await model.generateContent(prompt);
      const response = await result.response;
      const text = response.text();

      return this.parseResponse(text, contentType);
    } catch (error) {
      console.error('Error generating content:', error);
      throw new Error('ржХржиржЯрзЗржирзНржЯ рждрзИрж░рж┐ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред');
    }
  }

  private parseResponse(text: string, contentType: ContentType): ContentResult {
    try {
      // Extract title
      const titleMatch = text.match(/CONTENT_TITLE_START\s*([\s\S]*?)\s*CONTENT_TITLE_END/);
      const title = titleMatch ? titleMatch[1].trim() : `${contentType} рж╢рж┐рж░рзЛржирж╛ржо рждрзИрж░рж┐ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ`;

      // Extract content
      const contentMatch = text.match(/CONTENT_BODY_START\s*([\s\S]*?)\s*CONTENT_BODY_END/);
      const content = contentMatch ? contentMatch[1].trim() : 'ржХржиржЯрзЗржирзНржЯ рждрзИрж░рж┐ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ';

      // Extract image ideas
      const imageIdeasMatch = text.match(/IMAGE_IDEAS_START\s*([\s\S]*?)\s*IMAGE_IDEAS_END/);
      const imageIdeasText = imageIdeasMatch ? imageIdeasMatch[1].trim() : '';
      const imageIdeas = imageIdeasText.split('\n').map(idea => idea.trim().replace(/^[-тАв]\s*/, '')).filter(idea => idea.length > 0);

      return {
        type: contentType,
        title,
        content,
        imageIdeas: imageIdeas.length > 0 ? imageIdeas : ['ржЗржорзЗржЬ ржЖржЗржбрж┐ржпрж╝рж╛ рждрзИрж░рж┐ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ']
      };
    } catch (error) {
      console.error('Error parsing response:', error);
      throw new Error('рж░рзЗрж╕ржкржирзНрж╕ ржкрж╛рж░рзНрж╕ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ');
    }
  }
}